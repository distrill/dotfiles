#export BSPWM_SOCKET=/tmp/bspwm_0_0-socket
#export PATH=$PATH:/home/arthur/Development/scripts/bar/workspaces
#
#BAR_FIFO=/tmp/panel_fifo  # you should probably just leave this alone
#
#color_fg="#ff7c6b69"    # bar foreground
#color_bg="#fff6f6f2"    # bar background
#
#color_01="#ff474737"	  # focused & occupied
#color_02="#ff474737"	  # focused & empty
#color_03="#ff474737"	  # focused & urgent
#color_04="#ff737474"	  # unfocused & occupied
#color_05="#ff737474"	  # unfocused & empty
#color_06="#ff997f73"	  # unfocused & urgent
#
#font="-*-terminus-bold-r-normal-*-24-*-*-*-c-*-*-*"
#geometry="700x20+930+1580" # in the format "<width>x<height>+<xoffset>+<yoffset>"
#include_value=false
### END SETTINGS
#
#modules() {
#bspc control --subscribe > "$BAR_FIFO" &
#}
#
#
#parse-module-output() {
#    while read -r line ; do
#        case $line in
#            v*)
#            # set up volume indicator
#            volume="$line" ;;
#            c*)
#            # set up clock
#            clock="${line#?}" ;;
#            d*)
#            # set up date
#            date="${line#?}" ;;
#            W*)
#            # set up tags
#            wm_infos=""
#            IFS=':'
#            set -- ${line#?}
#            while (( $# > 0 )) ; do
#                item=$1
#                name=${item#?}
#                desk=" $name "
#                # between_one_four $name
#                if [ $name != "one" ] && [ $name != "two" ] && [ $name != "three" ] && [ $name != "four" ]&& [ $name != "nine" ]&& [ $name != "ten" ]
#                    then
#                    case $item in
#                        O*)
#                        # focused occupied desktop
#                        wm_infos="$wm_infos%{F$color_01}%{A:bspc desktop -f $name:}$desk%{A}" ;;
#                        # wm_infos="$#" ;;
#                        F*)
#                        # focused empty desktop
#                        wm_infos="$wm_infos%{F$color_02}%{A:bspc desktop -f $name:}$desk%{A}" ;;
#                        # wm_infos="$item" ;;
#                        U*)
#                        # focused urgent desktop
#                        wm_infos="$wm_infos%{F$color_03}%{A:bspc desktop -f $name:}$desk%{A}" ;;
#                        o*)
#                        # occupied desktop
#                        wm_infos="$wm_infos%{F$color_04}%{A:bspc desktop -f $name:}$desk%{A}" ;;
#                        f*)
#                        # free desktop
#                        wm_infos="$wm_infos%{F$color_05}%{A:bspc desktop -f $name:}$desk%{A}" ;;
#                        u*)
#                        # urgent desktop
#                        wm_infos="$wm_infos%{F$color_06}%{A:bspc desktop -f $name:}$desk%{A}" ;;
#                    esac
#                fi
#                shift
#            done
#            wm_info=""
#            IFS=':'
#            set -- ${line#?}
#            while (( $# > 9 )) ; do
#                item=$1
#                name=${item#?}
#                desk=" $name "
#                case $item in
#                    O*)
#                    # focused occupied desktop
#                    wm_info="$wm_info%{F$color_01}%{A:bspc desktop -f $name:}$desk%{A}" ;;
#                    # wm_info="$#" ;;
#                    F*)
#                    # focused empty desktop
#                    wm_info="$wm_info%{F$color_02}%{A:bspc desktop -f $name:}$desk%{A}" ;;
#                    # wm_info="$item" ;;
#                    U*)
#                    # focused urgent desktop
#                    wm_info="$wm_info%{F$color_03}%{A:bspc desktop -f $name:}$desk%{A}" ;;
#                    o*)
#                    # occupied desktop
#                    wm_info="$wm_info%{F$color_04}%{A:bspc desktop -f $name:}$desk%{A}" ;;
#                    f*)
#                    # free desktop
#                    wm_info="$wm_info%{F$color_05}%{A:bspc desktop -f $name:}$desk%{A}" ;;
#                    u*)
#                    # urgent desktop
#                    wm_info="$wm_info%{F$color_06}%{A:bspc desktop -f $name:}$desk%{A}" ;;
#                esac
#                shift
#            done ;;
#        esac
#        #printf("%{c}$wm_infos")
#        echo "%{c}$wm_infos"
#    done
#}
#
## prepare
#if [[ $(pgrep -cx bard) -gt 1 ]]; then
#    echo "bar-aint-recursive is already running" >&2
#    exit 1
#fi
#trap 'trap - TERM; kill 0' INT TERM QUIT EXIT
#[ -e "$BAR_FIFO" ] && rm "$BAR_FIFO"
#mkfifo "$BAR_FIFO"
#
## run module commands
#modules &
#
## pull it all together
#parse-module-output < "$BAR_FIFO" | bar -p -B "$color_bg" -f "$font" -F "$color_fg" -g "$geometry" | while read line; do eval "$line"; done &
#
#wait




 #!/bin/bash

 export BSPWM_SOCKET=/tmp/bspwm_0_0-socket
 # export PATH=$PATH:/home/arthur/Scripts/bspanel

 ## SETTINGS
 BAR_FIFO=/tmp/panel_fifo  # you should probably just leave this alone
 # colors, in the format "#<alpha><rr><gg><bb>"
 # color_fg="#ff9D9072"    # bar foreground
 # color_bg="#ff121212"    # bar background
 color_fg="#ff9D9D9D"    # bar foreground
 color_bg="#ff262626"    # bar background
 # colors for workspaces
 # color_01="#ffF2F29F"	  # focused & occupied
 # color_02="#ffF2F29F"	  # focused & empty
 # color_03="#ffF2F29F"	  # focused & urgent
 # color_04="#ff9D9072"	  # unfocused & occupied
 # color_05="#ff9D9072"	  # unfocused & empty
 # color_06="#ff9D9072"	  # unfocused & urgent

 color_01="#ffF2F2F2"	  # focused & occupied
 color_02="#ffF2F2F2"	  # focused & empty
 color_03="#ffF2F2F2"	  # focused & urgent
 color_04="#ff9D9D9D"	  # unfocused & occupied
 color_05="#ff9D9D9D"	  # unfocused & empty
 color_06="#ff9D9D9D"	  # unfocused & urgent


 # weather
 citycode=12778033	  # yahoo city code for weather
 units=f		  # weather temp units, f or c
 # mpd
 mpdport=6600            # port mpd is listening on
 # bar options



 font="-*-terminus-bold-r-normal-*-14-*-*-*-c-*-*-*"
 geometry="260x20+1150+1580" # in the format "<width>x<height>+<xoffset>+<yoffset>"

 include_value=false
 ## END SETTINGS

 modules() {
     # bspwm stats
     bspc control --subscribe > "$BAR_FIFO" &

     # date
     while true; do
         date +"c%H:%M"
         sleep 1
     done > "$BAR_FIFO" &

     # time
     while true; do
         date +"d%A. %B %_d"
         sleep 1
     done > "$BAR_FIFO" &

     # # volume
     # while true; do
     #   if [[ -z "$(amixer get Master | grep off)" ]]; then
     #     echo "volume: $(amixer get Master | tail -n 1 | awk '{print $4}' | tr -d '[]%')"
     #   else
     #     echo "volume: m"
     #   fi
     #   sleep .2
     # done > "$BAR_FIFO" &
 }


 parse-module-output() {
     while read -r line ; do
         case $line in
             v*)
             # set up volume indicator
             volume="$line" ;;
             c*)
             # set up clock
             clock="${line#?}" ;;
             d*)
             # set up date
             date="${line#?}" ;;
             W*)
             # set up tags
             wm_infos=""
             IFS=':'
             set -- ${line#?}
             while (( $# > 0 )) ; do
                 item=$1
                 name=${item#?}
                 desk=" $name "
                 case $item in
                     O*)
                     # focused occupied desktop
                     wm_infos="$wm_infos%{F$color_01}%{A:bspc desktop -f $name:}$desk%{A}" ;;
                     # wm_infos="$#" ;;
                     F*)
                     # focused empty desktop
                     wm_infos="$wm_infos%{F$color_02}%{A:bspc desktop -f $name:}$desk%{A}" ;;
                     # wm_infos="$item" ;;
                     U*)
                     # focused urgent desktop
                     wm_infos="$wm_infos%{F$color_03}%{A:bspc desktop -f $name:}$desk%{A}" ;;
                     o*)
                     # occupied desktop
                     wm_infos="$wm_infos%{F$color_04}%{A:bspc desktop -f $name:}$desk%{A}" ;;
                     f*)
                     # free desktop
                     wm_infos="$wm_infos%{F$color_05}%{A:bspc desktop -f $name:}$desk%{A}" ;;
                     u*)
                     # urgent desktop
                     wm_infos="$wm_infos%{F$color_06}%{A:bspc desktop -f $name:}$desk%{A}" ;;
                 esac
                 shift
             done
         esac
         shift
         echo "%{c}$wm_infos"
     done
 }

 # prepare
 if [[ $(pgrep -cx bard) -gt 1 ]]; then
     echo "bar-aint-recursive is already running" >&2
     exit 1
 fi
 trap 'trap - TERM; kill 0' INT TERM QUIT EXIT
 [ -e "$BAR_FIFO" ] && rm "$BAR_FIFO"
 mkfifo "$BAR_FIFO"

 # run module commands
 modules &

 # pull it all together
 parse-module-output < "$BAR_FIFO" | bar -p -B "$color_bg" -f "$font" -F "$color_fg" -g "$geometry" | while read line; do eval "$line"; done &

 wait
